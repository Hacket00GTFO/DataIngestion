{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Norbe\\\\OneDrive - Universidad Tecmilenio\\\\TECMILENIO\\\\tareas 5to semestre\\\\Repositorios\\\\DataIngestion\\\\frontend\\\\src\\\\pages\\\\DataForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDataIngestion } from '../services/DataIngestionContext';\nimport './DataForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataForm = () => {\n  _s();\n  const {\n    ingestData,\n    getExcelSchema,\n    getExcelData,\n    uploadExcel\n  } = useDataIngestion();\n  const [formData, setFormData] = useState([]);\n  const [schema, setSchema] = useState([]);\n  const [existingData, setExistingData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  useEffect(() => {\n    loadSchema();\n    loadExistingData();\n  }, []);\n  const loadSchema = async () => {\n    try {\n      const schemaData = await getSchema();\n      setSchema(schemaData.columns || []);\n      initializeFormData(schemaData.columns || []);\n    } catch (error) {\n      setMessage('Error cargando esquema de datos');\n      setMessageType('error');\n    }\n  };\n  const loadExistingData = async () => {\n    try {\n      const dataResponse = await getData();\n      setExistingData(dataResponse.data || []);\n    } catch (error) {\n      console.error('Error cargando datos existentes:', error);\n    }\n  };\n  const initializeFormData = columns => {\n    const initialData = {};\n    columns.forEach(column => {\n      initialData[column.name] = '';\n    });\n    setFormData([initialData]);\n  };\n  const addNewRecord = () => {\n    const newRecord = {};\n    schema.forEach(column => {\n      newRecord[column.name] = '';\n    });\n    setFormData([...formData, newRecord]);\n  };\n  const removeRecord = index => {\n    if (formData.length > 1) {\n      const newData = formData.filter((_, i) => i !== index);\n      setFormData(newData);\n    }\n  };\n  const updateRecord = (index, field, value) => {\n    const newData = [...formData];\n    newData[index][field] = value;\n    setFormData(newData);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      const result = await ingestData(formData);\n      if (result.success) {\n        setMessage(result.message);\n        setMessageType('success');\n        initializeFormData(schema);\n      } else {\n        setMessage(result.message || 'Error en el procesamiento');\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage('Error de conexión con el servidor');\n      setMessageType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      const result = await uploadExcel(file);\n      if (result.success) {\n        setMessage('Archivo procesado exitosamente. Recargando datos...');\n        setMessageType('success');\n\n        // Recargar el esquema y datos después de procesar el archivo\n        await loadSchema();\n        await loadExistingData();\n      } else {\n        setMessage('Error procesando archivo');\n        setMessageType('error');\n      }\n    } catch (error) {\n      setMessage(`Error subiendo archivo: ${error.message}`);\n      setMessageType('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ingesta de Datos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ingrese nuevos registros basados en el esquema de evidencia big data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${messageType}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Datos del Archivo Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), existingData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"data-preview\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Se encontraron \", existingData.length, \" registros en el archivo Excel:\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"data-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: schema.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: column.name\n                  }, column.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: existingData.slice(0, 5).map((record, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: schema.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: record[column.name] || '-'\n                  }, column.name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 27\n                  }, this))\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), existingData.length > 5 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"data-more\",\n              children: [\"... y \", existingData.length - 5, \" registros m\\xE1s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay datos cargados del archivo Excel a\\xFAn.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Subir Archivo Excel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \".xlsx,.xls\",\n            onChange: handleFileUpload,\n            className: \"file-input\",\n            id: \"file-upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"file-upload\",\n            className: \"file-label\",\n            children: \"Seleccionar Archivo Excel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ingreso Manual de Datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addNewRecord,\n            className: \"btn btn-secondary\",\n            children: \"Agregar Registro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [formData.map((record, recordIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"record-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"record-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [\"Registro \", recordIndex + 1]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), formData.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeRecord(recordIndex),\n                className: \"btn btn-danger\",\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-grid\",\n              children: schema.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-label\",\n                  children: [column.name, column.required && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"required\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 45\n                  }, this), column.description && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"field-description\",\n                    children: [\" - \", column.description]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: column.type === 'number' || column.type === 'integer' ? 'number' : column.type === 'date' ? 'date' : column.type === 'boolean' ? 'checkbox' : 'text',\n                  className: \"form-input\",\n                  value: record[column.name] || '',\n                  onChange: e => updateRecord(recordIndex, column.name, column.type === 'boolean' ? e.target.checked : e.target.value),\n                  required: column.required,\n                  placeholder: `Ingrese ${column.name.toLowerCase()}`,\n                  checked: column.type === 'boolean' ? record[column.name] === true : undefined\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"field-type\",\n                  children: [\"Tipo: \", column.type, \" \", column.required ? '(Requerido)' : '(Opcional)']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this)]\n              }, column.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, recordIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              disabled: loading,\n              children: loading ? 'Procesando...' : 'Procesar Datos'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(DataForm, \"9+vDsVHIM4Y6xqIYPemvzlBGI5Q=\", false, function () {\n  return [useDataIngestion];\n});\n_c = DataForm;\nexport default DataForm;\nvar _c;\n$RefreshReg$(_c, \"DataForm\");","map":{"version":3,"names":["React","useState","useEffect","useDataIngestion","jsxDEV","_jsxDEV","DataForm","_s","ingestData","getExcelSchema","getExcelData","uploadExcel","formData","setFormData","schema","setSchema","existingData","setExistingData","loading","setLoading","message","setMessage","messageType","setMessageType","loadSchema","loadExistingData","schemaData","getSchema","columns","initializeFormData","error","dataResponse","getData","data","console","initialData","forEach","column","name","addNewRecord","newRecord","removeRecord","index","length","newData","filter","_","i","updateRecord","field","value","handleSubmit","e","preventDefault","result","success","handleFileUpload","event","file","target","files","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","slice","record","type","accept","onChange","id","htmlFor","onClick","onSubmit","recordIndex","required","description","checked","placeholder","toLowerCase","undefined","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Norbe/OneDrive - Universidad Tecmilenio/TECMILENIO/tareas 5to semestre/Repositorios/DataIngestion/frontend/src/pages/DataForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDataIngestion } from '../services/DataIngestionContext';\r\nimport './DataForm.css';\r\n\r\nconst DataForm = () => {\r\n  const { ingestData, getExcelSchema, getExcelData, uploadExcel } = useDataIngestion();\r\n  const [formData, setFormData] = useState([]);\r\n  const [schema, setSchema] = useState([]);\r\n  const [existingData, setExistingData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadSchema();\r\n    loadExistingData();\r\n  }, []);\r\n\r\n  const loadSchema = async () => {\r\n    try {\r\n      const schemaData = await getSchema();\r\n      setSchema(schemaData.columns || []);\r\n      initializeFormData(schemaData.columns || []);\r\n    } catch (error) {\r\n      setMessage('Error cargando esquema de datos');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  const loadExistingData = async () => {\r\n    try {\r\n      const dataResponse = await getData();\r\n      setExistingData(dataResponse.data || []);\r\n    } catch (error) {\r\n      console.error('Error cargando datos existentes:', error);\r\n    }\r\n  };\r\n\r\n  const initializeFormData = (columns) => {\r\n    const initialData = {};\r\n    columns.forEach(column => {\r\n      initialData[column.name] = '';\r\n    });\r\n    setFormData([initialData]);\r\n  };\r\n\r\n  const addNewRecord = () => {\r\n    const newRecord = {};\r\n    schema.forEach(column => {\r\n      newRecord[column.name] = '';\r\n    });\r\n    setFormData([...formData, newRecord]);\r\n  };\r\n\r\n  const removeRecord = (index) => {\r\n    if (formData.length > 1) {\r\n      const newData = formData.filter((_, i) => i !== index);\r\n      setFormData(newData);\r\n    }\r\n  };\r\n\r\n  const updateRecord = (index, field, value) => {\r\n    const newData = [...formData];\r\n    newData[index][field] = value;\r\n    setFormData(newData);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const result = await ingestData(formData);\r\n      if (result.success) {\r\n        setMessage(result.message);\r\n        setMessageType('success');\r\n        initializeFormData(schema);\r\n      } else {\r\n        setMessage(result.message || 'Error en el procesamiento');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error de conexión con el servidor');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      const result = await uploadExcel(file);\r\n      \r\n      if (result.success) {\r\n        setMessage('Archivo procesado exitosamente. Recargando datos...');\r\n        setMessageType('success');\r\n        \r\n        // Recargar el esquema y datos después de procesar el archivo\r\n        await loadSchema();\r\n        await loadExistingData();\r\n      } else {\r\n        setMessage('Error procesando archivo');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Error subiendo archivo: ${error.message}`);\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-form\">\r\n      <div className=\"container\">\r\n        <h2>Ingesta de Datos</h2>\r\n        <p>Ingrese nuevos registros basados en el esquema de evidencia big data.</p>\r\n\r\n        {message && (\r\n          <div className={`alert alert-${messageType}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-section\">\r\n          <h3>Datos del Archivo Excel</h3>\r\n          {existingData.length > 0 ? (\r\n            <div className=\"data-preview\">\r\n              <p>Se encontraron {existingData.length} registros en el archivo Excel:</p>\r\n              <div className=\"data-table-container\">\r\n                <table className=\"data-table\">\r\n                  <thead>\r\n                    <tr>\r\n                      {schema.map((column) => (\r\n                        <th key={column.name}>{column.name}</th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {existingData.slice(0, 5).map((record, index) => (\r\n                      <tr key={index}>\r\n                        {schema.map((column) => (\r\n                          <td key={column.name}>\r\n                            {record[column.name] || '-'}\r\n                          </td>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n                {existingData.length > 5 && (\r\n                  <p className=\"data-more\">\r\n                    ... y {existingData.length - 5} registros más\r\n                  </p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <p>No hay datos cargados del archivo Excel aún.</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-section\">\r\n          <h3>Subir Archivo Excel</h3>\r\n          <div className=\"file-upload\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx,.xls\"\r\n              onChange={handleFileUpload}\r\n              className=\"file-input\"\r\n              id=\"file-upload\"\r\n            />\r\n            <label htmlFor=\"file-upload\" className=\"file-label\">\r\n              Seleccionar Archivo Excel\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-section\">\r\n          <div className=\"section-header\">\r\n            <h3>Ingreso Manual de Datos</h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={addNewRecord}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Agregar Registro\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            {formData.map((record, recordIndex) => (\r\n              <div key={recordIndex} className=\"record-form\">\r\n                <div className=\"record-header\">\r\n                  <h4>Registro {recordIndex + 1}</h4>\r\n                  {formData.length > 1 && (\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeRecord(recordIndex)}\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-grid\">\r\n                  {schema.map((column) => (\r\n                    <div key={column.name} className=\"form-group\">\r\n                      <label className=\"form-label\">\r\n                        {column.name}\r\n                        {column.required && <span className=\"required\">*</span>}\r\n                        {column.description && (\r\n                          <span className=\"field-description\"> - {column.description}</span>\r\n                        )}\r\n                      </label>\r\n                      <input\r\n                        type={column.type === 'number' || column.type === 'integer' ? 'number' : \r\n                              column.type === 'date' ? 'date' : \r\n                              column.type === 'boolean' ? 'checkbox' : 'text'}\r\n                        className=\"form-input\"\r\n                        value={record[column.name] || ''}\r\n                        onChange={(e) => updateRecord(recordIndex, column.name, \r\n                          column.type === 'boolean' ? e.target.checked : e.target.value)}\r\n                        required={column.required}\r\n                        placeholder={`Ingrese ${column.name.toLowerCase()}`}\r\n                        checked={column.type === 'boolean' ? record[column.name] === true : undefined}\r\n                      />\r\n                      <small className=\"field-type\">\r\n                        Tipo: {column.type} {column.required ? '(Requerido)' : '(Opcional)'}\r\n                      </small>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"form-actions\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? 'Procesando...' : 'Procesar Datos'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}