{"ast":null,"code":"import React,{createContext,useContext,useState,useRef}from'react';import{dataIngestionAPI}from'./api';import{jsx as _jsx}from\"react/jsx-runtime\";const DataIngestionContext=/*#__PURE__*/createContext();export const useDataIngestion=()=>{const context=useContext(DataIngestionContext);if(!context){throw new Error('useDataIngestion must be used within a DataIngestionProvider');}return context;};// Cache para almacenar respuestas de API\nconst apiCache=new Map();const CACHE_DURATION=30000;// 30 segundos\n// Función para crear una clave de cache\nconst createCacheKey=function(method){let params=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return\"\".concat(method,\"_\").concat(JSON.stringify(params));};// Función para verificar si el cache es válido\nconst isCacheValid=cacheEntry=>{return cacheEntry&&Date.now()-cacheEntry.timestamp<CACHE_DURATION;};export const DataIngestionProvider=_ref=>{let{children}=_ref;const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const debounceTimers=useRef(new Map());// Función helper para manejo de cache y debouncing\nconst cachedApiCall=async function(method,apiFunction){let params=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};let useCache=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;const cacheKey=createCacheKey(method,params);// Verificar cache si está habilitado\nif(useCache){const cached=apiCache.get(cacheKey);if(isCacheValid(cached)){console.log(\"Cache hit for \".concat(method));return cached.data;}}// Debouncing: cancelar llamada anterior si existe\nif(debounceTimers.current.has(cacheKey)){clearTimeout(debounceTimers.current.get(cacheKey));}return new Promise((resolve,reject)=>{const timerId=setTimeout(async()=>{try{console.log(\"API call for \".concat(method));const response=await apiFunction(params);// Guardar en cache\nif(useCache){apiCache.set(cacheKey,{data:response,timestamp:Date.now()});}debounceTimers.current.delete(cacheKey);resolve(response);}catch(error){debounceTimers.current.delete(cacheKey);reject(error);}},300);// 300ms de debounce\ndebounceTimers.current.set(cacheKey,timerId);});};const ingestData=async data=>{try{setLoading(true);setError(null);const response=await dataIngestionAPI.ingestData(data);return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getData=async()=>{try{setLoading(true);setError(null);const response=await cachedApiCall('getData',()=>dataIngestionAPI.getData(),{},true);return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getStatistics=async()=>{try{setLoading(true);setError(null);const response=await cachedApiCall('getStatistics',()=>dataIngestionAPI.getStatistics(),{},true);return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getSchema=async()=>{try{setLoading(true);setError(null);const response=await dataIngestionAPI.getSchema();return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getTiradoresStatistics=async()=>{try{setLoading(true);setError(null);const response=await cachedApiCall('getTiradoresStatistics',()=>dataIngestionAPI.getTiradoresStatistics(),{},true);return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getSesionesStatistics=async()=>{try{setLoading(true);setError(null);const response=await dataIngestionAPI.getSesionesStatistics();return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getAnalisisCompleto=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);setError(null);const response=await cachedApiCall('getAnalisisCompleto',()=>dataIngestionAPI.getAnalisisCompleto(params),params,true);return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getTiradores=async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};try{setLoading(true);setError(null);const response=await dataIngestionAPI.getTiradores(params);return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const addManualEntry=async data=>{try{setLoading(true);setError(null);const response=await dataIngestionAPI.addManualEntry(data);return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const getDataSchema=async()=>{try{setLoading(true);setError(null);const response=await dataIngestionAPI.getDataSchema();return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};const deleteAllData=async()=>{try{setLoading(true);setError(null);const response=await dataIngestionAPI.deleteAllData();// Limpiar cache después de eliminar datos\napiCache.clear();return response;}catch(err){setError(err.message);throw err;}finally{setLoading(false);}};// Función para limpiar cache manualmente\nconst clearCache=()=>{apiCache.clear();console.log('Cache cleared');};const value={loading,error,ingestData,getData,getStatistics,getSchema,getTiradoresStatistics,getSesionesStatistics,getAnalisisCompleto,getTiradores,addManualEntry,getDataSchema,deleteAllData,clearCache};return/*#__PURE__*/_jsx(DataIngestionContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useRef","dataIngestionAPI","jsx","_jsx","DataIngestionContext","useDataIngestion","context","Error","apiCache","Map","CACHE_DURATION","createCacheKey","method","params","arguments","length","undefined","concat","JSON","stringify","isCacheValid","cacheEntry","Date","now","timestamp","DataIngestionProvider","_ref","children","loading","setLoading","error","setError","debounceTimers","cachedApiCall","apiFunction","useCache","cacheKey","cached","get","console","log","data","current","has","clearTimeout","Promise","resolve","reject","timerId","setTimeout","response","set","delete","ingestData","err","message","getData","getStatistics","getSchema","getTiradoresStatistics","getSesionesStatistics","getAnalisisCompleto","getTiradores","addManualEntry","getDataSchema","deleteAllData","clear","clearCache","value","Provider"],"sources":["C:/Users/Norbe/OneDrive - Universidad Tecmilenio/TECMILENIO/tareas 5to semestre/Repositorios/DataIngestion/frontend/src/services/DataIngestionContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useRef } from 'react';\r\nimport { dataIngestionAPI } from './api';\r\n\r\nconst DataIngestionContext = createContext();\r\n\r\nexport const useDataIngestion = () => {\r\n  const context = useContext(DataIngestionContext);\r\n  if (!context) {\r\n    throw new Error('useDataIngestion must be used within a DataIngestionProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// Cache para almacenar respuestas de API\r\nconst apiCache = new Map();\r\nconst CACHE_DURATION = 30000; // 30 segundos\r\n\r\n// Función para crear una clave de cache\r\nconst createCacheKey = (method, params = {}) => {\r\n  return `${method}_${JSON.stringify(params)}`;\r\n};\r\n\r\n// Función para verificar si el cache es válido\r\nconst isCacheValid = (cacheEntry) => {\r\n  return cacheEntry && (Date.now() - cacheEntry.timestamp) < CACHE_DURATION;\r\n};\r\n\r\nexport const DataIngestionProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const debounceTimers = useRef(new Map());\r\n\r\n  // Función helper para manejo de cache y debouncing\r\n  const cachedApiCall = async (method, apiFunction, params = {}, useCache = true) => {\r\n    const cacheKey = createCacheKey(method, params);\r\n    \r\n    // Verificar cache si está habilitado\r\n    if (useCache) {\r\n      const cached = apiCache.get(cacheKey);\r\n      if (isCacheValid(cached)) {\r\n        console.log(`Cache hit for ${method}`);\r\n        return cached.data;\r\n      }\r\n    }\r\n\r\n    // Debouncing: cancelar llamada anterior si existe\r\n    if (debounceTimers.current.has(cacheKey)) {\r\n      clearTimeout(debounceTimers.current.get(cacheKey));\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const timerId = setTimeout(async () => {\r\n        try {\r\n          console.log(`API call for ${method}`);\r\n          const response = await apiFunction(params);\r\n          \r\n          // Guardar en cache\r\n          if (useCache) {\r\n            apiCache.set(cacheKey, {\r\n              data: response,\r\n              timestamp: Date.now()\r\n            });\r\n          }\r\n          \r\n          debounceTimers.current.delete(cacheKey);\r\n          resolve(response);\r\n        } catch (error) {\r\n          debounceTimers.current.delete(cacheKey);\r\n          reject(error);\r\n        }\r\n      }, 300); // 300ms de debounce\r\n\r\n      debounceTimers.current.set(cacheKey, timerId);\r\n    });\r\n  };\r\n\r\n  const ingestData = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dataIngestionAPI.ingestData(data);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await cachedApiCall('getData', () => dataIngestionAPI.getData(), {}, true);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatistics = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await cachedApiCall('getStatistics', () => dataIngestionAPI.getStatistics(), {}, true);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getSchema = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dataIngestionAPI.getSchema();\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getTiradoresStatistics = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await cachedApiCall('getTiradoresStatistics', () => dataIngestionAPI.getTiradoresStatistics(), {}, true);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getSesionesStatistics = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dataIngestionAPI.getSesionesStatistics();\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getAnalisisCompleto = async (params = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await cachedApiCall('getAnalisisCompleto', () => dataIngestionAPI.getAnalisisCompleto(params), params, true);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getTiradores = async (params = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dataIngestionAPI.getTiradores(params);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const addManualEntry = async (data) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dataIngestionAPI.addManualEntry(data);\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getDataSchema = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dataIngestionAPI.getDataSchema();\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteAllData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await dataIngestionAPI.deleteAllData();\r\n      // Limpiar cache después de eliminar datos\r\n      apiCache.clear();\r\n      return response;\r\n    } catch (err) {\r\n      setError(err.message);\r\n      throw err;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Función para limpiar cache manualmente\r\n  const clearCache = () => {\r\n    apiCache.clear();\r\n    console.log('Cache cleared');\r\n  };\r\n\r\n  const value = {\r\n    loading,\r\n    error,\r\n    ingestData,\r\n    getData,\r\n    getStatistics,\r\n    getSchema,\r\n    getTiradoresStatistics,\r\n    getSesionesStatistics,\r\n    getAnalisisCompleto,\r\n    getTiradores,\r\n    addManualEntry,\r\n    getDataSchema,\r\n    deleteAllData,\r\n    clearCache,\r\n  };\r\n\r\n  return (\r\n    <DataIngestionContext.Provider value={value}>\r\n      {children}\r\n    </DataIngestionContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}