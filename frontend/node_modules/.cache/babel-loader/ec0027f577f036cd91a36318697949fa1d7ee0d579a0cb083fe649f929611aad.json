{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useDataIngestion}from'../services/DataIngestionContext';import'./DataForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DataForm=()=>{const{ingestData,getSchema}=useDataIngestion();const[formData,setFormData]=useState([]);const[schema,setSchema]=useState([]);const[loading,setLoading]=useState(false);const[message,setMessage]=useState('');const[messageType,setMessageType]=useState('');useEffect(()=>{loadSchema();},[]);const loadSchema=async()=>{try{const schemaData=await getSchema();setSchema(schemaData.columns||[]);initializeFormData(schemaData.columns||[]);}catch(error){setMessage('Error cargando esquema de datos');setMessageType('error');}};const initializeFormData=columns=>{const initialData={};columns.forEach(column=>{initialData[column.name]='';});setFormData([initialData]);};const addNewRecord=()=>{const newRecord={};schema.forEach(column=>{newRecord[column.name]='';});setFormData([...formData,newRecord]);};const removeRecord=index=>{if(formData.length>1){const newData=formData.filter((_,i)=>i!==index);setFormData(newData);}};const updateRecord=(index,field,value)=>{const newData=[...formData];newData[index][field]=value;setFormData(newData);};const handleSubmit=async e=>{e.preventDefault();setLoading(true);setMessage('');try{const result=await ingestData(formData);if(result.success){setMessage(result.message);setMessageType('success');initializeFormData(schema);}else{setMessage(result.message||'Error en el procesamiento');setMessageType('error');}}catch(error){setMessage('Error de conexión con el servidor');setMessageType('error');}finally{setLoading(false);}};const handleFileUpload=async event=>{const file=event.target.files[0];if(!file)return;setLoading(true);try{const formData=new FormData();formData.append('file',file);const response=await fetch('/api/v1/data/upload-excel',{method:'POST',body:formData});const result=await response.json();if(result.success){setMessage('Archivo procesado exitosamente');setMessageType('success');}else{setMessage('Error procesando archivo');setMessageType('error');}}catch(error){setMessage('Error subiendo archivo');setMessageType('error');}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"data-form\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Ingesta de Datos\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Ingrese nuevos registros basados en el esquema de evidencia big data.\"}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-\".concat(messageType),children:message}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Subir Archivo Excel\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-upload\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".xlsx,.xls\",onChange:handleFileUpload,className:\"file-input\",id:\"file-upload\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-upload\",className:\"file-label\",children:\"Seleccionar Archivo Excel\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"section-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ingreso Manual de Datos\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:addNewRecord,className:\"btn btn-secondary\",children:\"Agregar Registro\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[formData.map((record,recordIndex)=>/*#__PURE__*/_jsxs(\"div\",{className:\"record-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"record-header\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Registro \",recordIndex+1]}),formData.length>1&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>removeRecord(recordIndex),className:\"btn btn-danger\",children:\"Eliminar\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-grid\",children:schema.map(column=>/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"form-label\",children:[column.name,column.required&&/*#__PURE__*/_jsx(\"span\",{className:\"required\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"input\",{type:column.type==='number'?'number':'text',className:\"form-input\",value:record[column.name]||'',onChange:e=>updateRecord(recordIndex,column.name,e.target.value),required:column.required})]},column.name))})]},recordIndex)),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,children:loading?'Procesando...':'Procesar Datos'})})]})]})]})});};export default DataForm;","map":{"version":3,"names":["React","useState","useEffect","useDataIngestion","jsx","_jsx","jsxs","_jsxs","DataForm","ingestData","getSchema","formData","setFormData","schema","setSchema","loading","setLoading","message","setMessage","messageType","setMessageType","loadSchema","schemaData","columns","initializeFormData","error","initialData","forEach","column","name","addNewRecord","newRecord","removeRecord","index","length","newData","filter","_","i","updateRecord","field","value","handleSubmit","e","preventDefault","result","success","handleFileUpload","event","file","target","files","FormData","append","response","fetch","method","body","json","className","children","concat","type","accept","onChange","id","htmlFor","onClick","onSubmit","map","record","recordIndex","required","disabled"],"sources":["C:/Users/Norbe/OneDrive - Universidad Tecmilenio/TECMILENIO/tareas 5to semestre/Repositorios/DataIngestion/frontend/src/pages/DataForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDataIngestion } from '../services/DataIngestionContext';\r\nimport './DataForm.css';\r\n\r\nconst DataForm = () => {\r\n  const { ingestData, getSchema } = useDataIngestion();\r\n  const [formData, setFormData] = useState([]);\r\n  const [schema, setSchema] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadSchema();\r\n  }, []);\r\n\r\n  const loadSchema = async () => {\r\n    try {\r\n      const schemaData = await getSchema();\r\n      setSchema(schemaData.columns || []);\r\n      initializeFormData(schemaData.columns || []);\r\n    } catch (error) {\r\n      setMessage('Error cargando esquema de datos');\r\n      setMessageType('error');\r\n    }\r\n  };\r\n\r\n  const initializeFormData = (columns) => {\r\n    const initialData = {};\r\n    columns.forEach(column => {\r\n      initialData[column.name] = '';\r\n    });\r\n    setFormData([initialData]);\r\n  };\r\n\r\n  const addNewRecord = () => {\r\n    const newRecord = {};\r\n    schema.forEach(column => {\r\n      newRecord[column.name] = '';\r\n    });\r\n    setFormData([...formData, newRecord]);\r\n  };\r\n\r\n  const removeRecord = (index) => {\r\n    if (formData.length > 1) {\r\n      const newData = formData.filter((_, i) => i !== index);\r\n      setFormData(newData);\r\n    }\r\n  };\r\n\r\n  const updateRecord = (index, field, value) => {\r\n    const newData = [...formData];\r\n    newData[index][field] = value;\r\n    setFormData(newData);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const result = await ingestData(formData);\r\n      if (result.success) {\r\n        setMessage(result.message);\r\n        setMessageType('success');\r\n        initializeFormData(schema);\r\n      } else {\r\n        setMessage(result.message || 'Error en el procesamiento');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error de conexión con el servidor');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n      \r\n      const response = await fetch('/api/v1/data/upload-excel', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        setMessage('Archivo procesado exitosamente');\r\n        setMessageType('success');\r\n      } else {\r\n        setMessage('Error procesando archivo');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      setMessage('Error subiendo archivo');\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-form\">\r\n      <div className=\"container\">\r\n        <h2>Ingesta de Datos</h2>\r\n        <p>Ingrese nuevos registros basados en el esquema de evidencia big data.</p>\r\n\r\n        {message && (\r\n          <div className={`alert alert-${messageType}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-section\">\r\n          <h3>Subir Archivo Excel</h3>\r\n          <div className=\"file-upload\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\".xlsx,.xls\"\r\n              onChange={handleFileUpload}\r\n              className=\"file-input\"\r\n              id=\"file-upload\"\r\n            />\r\n            <label htmlFor=\"file-upload\" className=\"file-label\">\r\n              Seleccionar Archivo Excel\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-section\">\r\n          <div className=\"section-header\">\r\n            <h3>Ingreso Manual de Datos</h3>\r\n            <button\r\n              type=\"button\"\r\n              onClick={addNewRecord}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Agregar Registro\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            {formData.map((record, recordIndex) => (\r\n              <div key={recordIndex} className=\"record-form\">\r\n                <div className=\"record-header\">\r\n                  <h4>Registro {recordIndex + 1}</h4>\r\n                  {formData.length > 1 && (\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeRecord(recordIndex)}\r\n                      className=\"btn btn-danger\"\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-grid\">\r\n                  {schema.map((column) => (\r\n                    <div key={column.name} className=\"form-group\">\r\n                      <label className=\"form-label\">\r\n                        {column.name}\r\n                        {column.required && <span className=\"required\">*</span>}\r\n                      </label>\r\n                      <input\r\n                        type={column.type === 'number' ? 'number' : 'text'}\r\n                        className=\"form-input\"\r\n                        value={record[column.name] || ''}\r\n                        onChange={(e) => updateRecord(recordIndex, column.name, e.target.value)}\r\n                        required={column.required}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            <div className=\"form-actions\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? 'Procesando...' : 'Procesar Datos'}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}