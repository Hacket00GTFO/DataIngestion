{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api/v1';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Interceptor para manejar errores\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||error.message||'Error de conexión';throw new Error(message);});export const dataIngestionAPI={// Ingesta de datos\ningestData:async data=>{const response=await api.post('/data/ingest',{data,source:'web_interface'});return response.data;},// Obtener datos\ngetData:async()=>{const response=await api.get('/data');return response.data;},// Obtener estadísticas\ngetStatistics:async()=>{const response=await api.get('/data/statistics');return response.data;},// Obtener esquema\ngetSchema:async()=>{const response=await api.get('/data/schema');return response.data;},// Subir archivo Excel\nuploadExcel:async file=>{const formData=new FormData();formData.append('file',file);const response=await api.post('/data/upload-excel',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// Verificar salud del servicio\nhealthCheck:async()=>{const response=await api.get('/health');return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","response","use","error","_error$response","_error$response$data","message","data","detail","Error","dataIngestionAPI","ingestData","post","source","getData","get","getStatistics","getSchema","uploadExcel","file","formData","FormData","append","healthCheck"],"sources":["C:/Users/Norbe/OneDrive - Universidad Tecmilenio/TECMILENIO/tareas 5to semestre/Repositorios/DataIngestion/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor para manejar errores\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const message = error.response?.data?.detail || error.message || 'Error de conexión';\r\n    throw new Error(message);\r\n  }\r\n);\r\n\r\nexport const dataIngestionAPI = {\r\n  // Ingesta de datos\r\n  ingestData: async (data) => {\r\n    const response = await api.post('/data/ingest', {\r\n      data,\r\n      source: 'web_interface',\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener datos\r\n  getData: async () => {\r\n    const response = await api.get('/data');\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener estadísticas\r\n  getStatistics: async () => {\r\n    const response = await api.get('/data/statistics');\r\n    return response.data;\r\n  },\r\n\r\n  // Obtener esquema\r\n  getSchema: async () => {\r\n    const response = await api.get('/data/schema');\r\n    return response.data;\r\n  },\r\n\r\n  // Subir archivo Excel\r\n  uploadExcel: async (file) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    \r\n    const response = await api.post('/data/upload-excel', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Verificar salud del servicio\r\n  healthCheck: async () => {\r\n    const response = await api.get('/health');\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,8BAA8B,CAEpF,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACvBC,OAAO,CAAEN,YAAY,CACrBO,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,EAAKA,QAAQ,CACrBE,KAAK,EAAK,KAAAC,eAAA,CAAAC,oBAAA,CACT,KAAM,CAAAC,OAAO,CAAG,EAAAF,eAAA,CAAAD,KAAK,CAACF,QAAQ,UAAAG,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBG,IAAI,UAAAF,oBAAA,iBAApBA,oBAAA,CAAsBG,MAAM,GAAIL,KAAK,CAACG,OAAO,EAAI,mBAAmB,CACpF,KAAM,IAAI,CAAAG,KAAK,CAACH,OAAO,CAAC,CAC1B,CACF,CAAC,CAED,MAAO,MAAM,CAAAI,gBAAgB,CAAG,CAC9B;AACAC,UAAU,CAAE,KAAO,CAAAJ,IAAI,EAAK,CAC1B,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACgB,IAAI,CAAC,cAAc,CAAE,CAC9CL,IAAI,CACJM,MAAM,CAAE,eACV,CAAC,CAAC,CACF,MAAO,CAAAZ,QAAQ,CAACM,IAAI,CACtB,CAAC,CAED;AACAO,OAAO,CAAE,KAAAA,CAAA,GAAY,CACnB,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACmB,GAAG,CAAC,OAAO,CAAC,CACvC,MAAO,CAAAd,QAAQ,CAACM,IAAI,CACtB,CAAC,CAED;AACAS,aAAa,CAAE,KAAAA,CAAA,GAAY,CACzB,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACmB,GAAG,CAAC,kBAAkB,CAAC,CAClD,MAAO,CAAAd,QAAQ,CAACM,IAAI,CACtB,CAAC,CAED;AACAU,SAAS,CAAE,KAAAA,CAAA,GAAY,CACrB,KAAM,CAAAhB,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACmB,GAAG,CAAC,cAAc,CAAC,CAC9C,MAAO,CAAAd,QAAQ,CAACM,IAAI,CACtB,CAAC,CAED;AACAW,WAAW,CAAE,KAAO,CAAAC,IAAI,EAAK,CAC3B,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAE7B,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACgB,IAAI,CAAC,oBAAoB,CAAEQ,QAAQ,CAAE,CAC9DrB,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAE,QAAQ,CAACM,IAAI,CACtB,CAAC,CAED;AACAgB,WAAW,CAAE,KAAAA,CAAA,GAAY,CACvB,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACmB,GAAG,CAAC,SAAS,CAAC,CACzC,MAAO,CAAAd,QAAQ,CAACM,IAAI,CACtB,CACF,CAAC,CAED,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}